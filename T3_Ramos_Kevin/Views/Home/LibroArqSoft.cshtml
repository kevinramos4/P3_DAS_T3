<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mejores libros de arquitectura de software</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        h1 {
            text-align: center;
            font-size: 1.5em;
            margin-bottom: 20px;
        }

        .libro {
            margin-bottom: 30px;
            border-bottom: 1px solid #ccc;
            padding-bottom: 20px;
        }

            .libro img {
                float: left;
                margin-right: 20px;
                max-width: 120px;
                height: auto;
            }

            .libro h2 {
                margin-top: 0;
            }

            .libro p {
                margin-top: 0;
            }
    </style>
</head>
<body>
    <h1>Mejores libros de arquitectura de software</h1>

    <div class="libro">
        <a href="https://m.media-amazon.com/images/I/41tjPqycZ1L._SY445_SX342_.jpg" target="_blank">
            <img src="https://m.media-amazon.com/images/I/41tjPqycZ1L._SY445_SX342_.jpg" alt="Portada libro Clean Architecture">
        </a>
        <h2>Arquitectura de software limpia - Clean Architecture: A Craftsman's Guide to Software Structure and Design</h2>
        <p><strong>Autor:</strong> Robert C. Martin</p>
        <p>Del mismo autor que Clean code, este libro profundiza en cómo mejorar la arquitectura del software, a través de patrones y principios sólidos. Es un libro recomendado a todos los profesionales de la industria del software que deseen tener una visión más amplia y de alto nivel acerca del proceso de diseño de software.</p>
    </div>

    <div class="libro">
        <a href="https://m.media-amazon.com/images/I/51-HCovszVL._SY445_SX342_.jpg" target="_blank">
            <img src="https://m.media-amazon.com/images/I/51-HCovszVL._SY445_SX342_.jpg" alt="Portada libro Software Architecture in Practice">
        </a>
        <h2>Arquitectura de software en práctica - Software Architecture in Practice</h2>
        <p><strong>Autores:</strong> Len Bass, Rick Kazman, Paul Clements</p>
        <p>El libro actúa de referencia para arquitectos de software que están comenzando en este rol. Guía al lector en sus responsabilidades más características y enseña cómo diseñar y documentar arquitecturas de software de forma concreta y con ejemplos prácticos. Es un libro muy recomendable para toda persona que quiera desarrollar sus habilidades en el diseño de software.</p>
    </div>

    <div class="libro">
        <a href="https://aprenderbigdata.com/wp-content/uploads/image-24.jpeg" target="_blank">
            <img src="https://aprenderbigdata.com/wp-content/uploads/image-24.jpeg" alt="Portada libro Designing Software Architectures">
        </a>
        <h2>Designing Software Architectures</h2>
        <p><strong>Autor:</strong> Humberto Cervantes</p>
        <p>Con este libro, obtendrás una estructura para diseñar arquitecturas de software robustas y aplicables en el mundo real. Explica con detalle y a través de ejemplos prácticos y de metodologías específicas las formas de convertirse en un experto arquitecto de software.</p>
    </div>

    <div class="libro">
        <a href="https://aprenderbigdata.com/wp-content/uploads/image-25.jpeg.webp" target="_blank">
            <img src="https://aprenderbigdata.com/wp-content/uploads/image-25.jpeg.webp" alt="Portada libro Designing Object-Oriented Software">
        </a>
        <h2>Designing Object-Oriented Software</h2>
        <p><strong>Autores:</strong> Rebecca Wirfs-Brock, Brian Wilkerson, Lauren Wiener</p>
        <p>Este libro ha sido un éxito, explica cómo diseñar software orientado a objetos con principios y procesos de diseño aplicables a multitud de proyectos. Se trata de un libro útil aunque no se empleen lenguajes de programación orientados a objetos. Termina con ejemplos para combinar los conceptos y herramientas que se explican.</p>
    </div>

    <div class="libro">
        <a href="https://aprenderbigdata.com/wp-content/uploads/image-26.jpeg" target="_blank">
            <img src="https://aprenderbigdata.com/wp-content/uploads/image-26.jpeg" alt="Portada libro Building Evolutionary Architectures">
        </a>
        <h2>Building Evolutionary Architectures</h2>
        <p><strong>Autores:</strong> Neal Ford, Rebecca Parsons, Patrick Kua</p>
        <p>Esta guía presenta una nueva forma de pensar sobre la arquitectura. Los desarrollos incrementales y las nuevas prácticas de desarrollo de software se han centrado en cómo la arquitectura cambia con el tiempo, y la capacidad de adaptar el software a las nuevas características a medida que evoluciona. Proporciona una visión de las nuevas herramientas, frameworks y paradigmas.</p>
    </div>

    <div class="libro">
        <a href="https://aprenderbigdata.com/wp-content/uploads/image-27.jpeg" target="_blank">
            <img src="https://aprenderbigdata.com/wp-content/uploads/image-27.jpeg" alt="Portada libro Sustainable Software Architecture">
        </a>
        <h2>Sustainable Software Architecture: Analyze and Reduce Technical Debt</h2>
        <p><strong>Autor:</strong> Carola Lilienthal</p>
        <p>El libro concentra la experiencia del autor desarrollando sistemas de software, arreglando y extendiendo las funcionalidades del software existente. Trata patrones arquitectónicos y de diseño, microservicios, sistemas monolíticos, Domain Driven Design, etc. Explica cómo reducir la deuda técnica mediante recomendaciones y sugerencias basadas en proyectos prácticos fácilmente aplicables en nuestros proyectos.</p>
    </div>

</body>
</html>
